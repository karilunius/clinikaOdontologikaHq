jdbc:h2:~/clinicaOdontologica

DELETE FROM ODONTOLOGOS WHERE id=1;
SELECT * FROM ODONTOLOGOS



/////////////////////////////////////APP USER  - HIBERNATE STUDENT

package com.clinikaOdontologikaHq.model.users;
import jakarta.persistence.*;
import lombok.Getter;
import lombok.Setter;

@Entity
@Table(name = "Users")
@Getter
@Setter
public class User {

    @Id
    @GeneratedValue
    private Long id;
    private String name;
    private String password;


    @ManyToMany(fetch = FetchType.EAGER)
    @JoinTable(
            name = "UserRoles",
            joinColumns = @JoinColumn(name = "id_user"),
            inverseJoinColumns = @JoinColumn(name = "id_rol")
    )
    private Set<Rol> roles;
}
///////////////////////////////////// ROLE --

/*
package com.clinikaOdontologikaHq.model.users;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import lombok.Getter;
import lombok.Setter;

@Entity
@Table(name = "Roles")
@Getter
@Setter
public class Rol {
    @Id
    @GeneratedValue
    private Long id;
    private String name;
}
*/

////////////////////////////////////////////////////////////userrepository

//package com.clinikaOdontologikaHq.repository.iusers;
//import com.clinikaOdontologikaHq.model.users.User;
//import org.springframework.data.jpa.repository.JpaRepository;
//import org.springframework.data.jpa.repository.Query;
//import org.springframework.data.repository.query.Param;
//import org.springframework.stereotype.Repository;
//import java.util.Optional;

/*@Repository
public interface IUserRepository extends JpaRepository<User, Long> {

    @Query("from User u where u.name = :name")
    Optional<User> getUserByName(@Param("name") String name);

}*/

///////////////////////////////////////////////////////service user
//package com.clinikaOdontologikaHq.service.users;
//import org.springframework.beans.factory.annotation.Autowired;
//import org.springframework.stereotype.Service;
//import java.util.HashSet;
//import java.util.Optional;
//import java.util.Set;

/*
@Service
public class UserService implements UserDetailsService {

    @Autowired
    IUserRepository userRepository;


    @Override
    public UserDetails loadUserByUsername(String s) throws UsernameNotFoundException {


        Optional<com.example.demo.model.User> user = userRepository.getUserByName(s);

        Set<GrantedAuthority> authorizations = new HashSet<>();
        for(Rol rol:user.get().getRoles())
        {
            GrantedAuthority authority = new SimpleGrantedAuthority(rol.getName());
            authorizations.add(authority);
        }


        User userDatail = new  User(user.get().getName(),"{noop}" + user.get().getPassword(),true,true,true,true,authorizations);
        return userDatail;
    }
}*/


/////////////////////////websecurityhandler

//package com.clinikaOdontologikaHq;
//import org.springframework.context.annotation.Configuration;

//@Configuration
//@EnableWebSecurity
//public class WebSecurityConfig extends WebSecurityConfigurerAdapter {


    /*@Override
    protected void configure(HttpSecurity http) throws Exception {

        http
                .csrf().disable()
                .authorizeRequests()
                .antMatchers("/index.html").hasRole("USER")
                .antMatchers("/studentAlta.html").hasRole("USER")
                .antMatchers("/studentsList.html").hasRole("USER")
                .anyRequest()
                .permitAll()
                .and()
                .formLogin()
                .and()
                .logout();

    }
}*/